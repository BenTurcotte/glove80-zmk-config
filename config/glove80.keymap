
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };
        // My custom behaviours
        my_ht: my_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <75>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
        my_shft_ht: my_shift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_SHIFT_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            require-prior-idle-ms = <75>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
        ps_m: powershell_macro {
            label = "POWERSHELL_MACRO";
            compatible = "zmk,behavior-macro";
            wait-ms = <10>;
            tap-ms = <10>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp P>
                , <&macro_tap &kp O>
                , <&macro_tap &kp W>
                , <&macro_tap &kp E>
                , <&macro_tap &kp R>
                , <&macro_tap &kp S>
                , <&macro_tap &kp H>
                , <&macro_tap &kp E>
                , <&macro_tap &kp L>
                , <&macro_tap &kp L>
                ;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
 &none               &none          &none           &none                &none                                                                                                        &none           &none          &none          &none       &none
 &none               &none          &none     &key_repeat                &none  &none                                                                          &none                  &none     &key_repeat          &none          &none       &none
 &kp GRAVE           &kp Q          &kp W           &kp F                &kp P  &kp V                                                                          &kp J                  &kp L           &kp U          &kp Y        &kp SQT   &kp MINUS
 &caps_word  &my_ht LGUI A  &my_ht LALT R  &my_ht LCTRL S  &my_shft_ht LSHFT T  &kp G                                                                          &kp H    &my_shft_ht RSHFT N  &my_ht RCTRL E  &my_ht RALT I  &my_ht RGUI O    &kp SEMI
 &kp BSLH            &kp Z          &kp X           &kp C                &kp D  &kp B  &lt 3 BSPC   &lt 4 RET  &kp ESC        &kp ESC  &lt 5 TAB  &lt 1 SPACE  &kp K                  &kp M       &kp COMMA        &kp DOT       &kp FSLH   &kp EQUAL
 &magic 2 0          &kp M          &kp L           &kp E                &kp N         &lt 1 SPACE  &lt 5 TAB  &kp ESC        &kp ESC  &lt 4 RET  &lt 3 BSPC                          &kp T           &kp S          &kp R          &kp A  &magic 2 0
            >;
        };

        layer_Nav {
            bindings = <
 &trans  &trans    &trans    &trans     &trans                                                                                 &trans           &trans     &trans     &trans  &trans
 &trans  &trans    &trans    &trans     &trans     &trans                                                            &trans    &trans           &trans     &trans     &trans  &trans
 &trans  &trans    &trans    &trans     &trans     &trans                                                         &kp PSCRN  &kp SLCK  &kp PAUSE_BREAK    &kp INS    &kp DEL  &trans
 &trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                                                          &kp CAPS  &kp LEFT         &kp DOWN     &kp UP  &kp RIGHT  &trans
 &trans  &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans    &trans  &trans  &trans        &trans   &trans   &trans  &trans  &kp HOME        &kp PG_UP  &kp PG_DN    &kp END  &trans
 &trans  &trans    &trans    &trans     &trans               &trans  &trans  &trans        &trans  &kp ESC  &kp DEL            &trans           &trans     &trans     &trans  &trans
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &reset            &none            &none            &none            &none  &rgb_ug RGB_EFR   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

        layer_Num {
            bindings = <
 &none      &none           &none           &none            &none                                                                                               &none            &none           &none           &none   &none
 &none      &none           &none           &none            &none            &none                                                             &none            &none            &none           &none           &none   &none
 &trans     &kp F1          &kp F2          &kp F3           &kp F4           &kp F5                                                           &kp F6           &kp F7           &kp F8          &kp F9         &kp F10  &trans
 &trans     &my_ht LGUI N1  &my_ht LALT N2  &my_ht LCTRL N3  &my_ht LSHFT N4  &kp N5                                                           &kp N6  &my_ht RSHFT N7  &my_ht RCTRL N8  &my_ht RALT N9  &my_ht RGUI N0  &trans
 &trans     &kp SEMI        &kp BSLH        &kp LBKT         &kp RBKT         &kp MINUS  &trans     &trans     &trans  &trans  &trans  &trans   &none         &kp LBRC         &kp RBRC        &kp PIPE       &kp COLON  &trans
 &trans     &trans          &trans          &trans           &trans                      &kp MINUS  &kp EQUAL  &trans  &trans  &trans  &trans                   &trans           &trans          &trans          &trans  &trans
            >;
        };

        layer_Sym {
            bindings = <
 &trans     &trans            &trans          &trans             &trans                                                                                                    &trans             &trans            &trans            &trans  &trans
 &none      &none             &none           &none              &none              &none                                                               &none               &none              &none             &none             &none   &none
 &trans     &kp F11           &kp F12         &kp F13            &kp F14            &kp F15                                                            &kp F16            &kp F17            &kp F18           &kp F19           &kp F20  &trans
 &trans     &my_ht LGUI EXCL  &my_ht LALT AT  &my_ht LCTRL HASH  &my_ht LSHFT DLLR  &kp PRCNT                                                        &kp CARET  &my_ht RSHFT AMPS  &my_ht RCTRL STAR  &my_ht RALT LPAR  &my_ht RGUI RPAR  &trans
 &trans     &kp COLON         &kp TILDE       &kp PIPE           &kp PLUS           &kp UNDER  &trans  &trans  &trans        &trans  &trans  &trans      &none           &kp LBRC           &kp RBRC          &kp PIPE         &kp COLON  &trans
 &trans     &trans            &trans          &trans             &trans                        &trans  &trans  &trans        &trans  &trans  &trans                        &trans             &trans            &trans            &trans  &trans
            >;
        };

        layer_Numpad {
            bindings = <
 &trans  &trans           &trans     &trans     &trans                                                                                              &trans    &trans     &trans    &trans  &trans
 &trans  &trans           &trans     &trans     &trans     &trans                                                                        &trans     &trans    &trans     &trans    &trans  &trans
 &trans  &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS                                                                   &trans     &trans    &trans     &trans    &trans  &trans
 &trans  &kp KP_SLASH     &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_EQUAL                                                                  &trans  &kp RSHFT  &kp RALT  &kp RCTRL  &kp RGUI  &trans
 &trans  &kp KP_DOT       &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp KP_NUM  &kp KP_ENTER  &trans        &trans  &trans  &trans  &trans     &trans    &trans     &trans    &trans  &trans
 &trans  &trans           &trans     &trans     &trans                   &kp KP_N0   &kp KP_MINUS  &trans        &trans  &trans  &trans             &trans    &trans     &trans    &trans  &trans
            >;
        };
    };
};
